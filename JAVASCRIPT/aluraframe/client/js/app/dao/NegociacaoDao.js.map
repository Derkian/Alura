{"version":3,"sources":["../../app-es6/dao/NegociacaoDao.js"],"names":["NegociacaoDao","connection","_connection","_store","negociacao","Promise","resolve","reject","request","transaction","objectStore","add","onsuccess","onerror","console","log","e","target","error","clear","cursor","openCursor","negociacoes","atual","result","dado","value","push","Negociacao","_data","_quantidade","_valor","continue","name"],"mappings":";;;;;;IAAMA,a;AAEF,2BAAYC,UAAZ,EAAuB;AAAA;;AAEnB,aAAKC,WAAL,GAAmBD,UAAnB;AACA,aAAKE,MAAL,GAAc,aAAd;AACH;;;;iCAEQC,U,EAAW;AAAA;;AAEhB,mBAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;;AAEpC,oBAAIC,UAAU,MAAKN,WAAL,CACKO,WADL,CACiB,CAAC,MAAKN,MAAN,CADjB,EAC+B,WAD/B,EAEKO,WAFL,CAEiB,MAAKP,MAFtB,EAGKQ,GAHL,CAGSP,UAHT,CAAd;;AAKAI,wBAAQI,SAAR,GAAoB,aAAK;;AAErBN;AACH,iBAHD;;AAKAE,wBAAQK,OAAR,GAAkB,aAAK;;AAEnBC,4BAAQC,GAAR,CAAYC,EAAEC,MAAF,CAASC,KAArB;AACAX,2BAAO,0CAAP;AACH,iBAJD;AAKH,aAjBM,CAAP;AAkBH;;;qCAEW;AAAA;;AAER,mBAAO,IAAIF,OAAJ,CAAY,UAACC,OAAD,EAASC,MAAT,EAAoB;;AAEnC,oBAAIC,UAAU,OAAKN,WAAL,CACTO,WADS,CACG,CAAC,OAAKN,MAAN,CADH,EACiB,WADjB,EAETO,WAFS,CAEG,OAAKP,MAFR,EAGTgB,KAHS,EAAd;;AAKAX,wBAAQI,SAAR,GAAoB,aAAK;;AAErBN,4BAAQ,mCAAR;AACH,iBAHD;;AAKAE,wBAAQK,OAAR,GAAkB,aAAK;;AAEnBN,2BAAO,0CAAP;AACH,iBAHD;AAIH,aAhBM,CAAP;AAiBH;;;qCAEW;AAAA;;AAER,mBAAO,IAAIF,OAAJ,CAAY,UAACC,OAAD,EAASC,MAAT,EAAmB;;AAElC,oBAAIa,SAAS,OAAKlB,WAAL,CACIO,WADJ,CACgB,CAAC,OAAKN,MAAN,CADhB,EAC+B,WAD/B,EAEIO,WAFJ,CAEgB,OAAKP,MAFrB,EAGIkB,UAHJ,EAAb;;AAKA,oBAAIC,cAAc,EAAlB;;AAEAF,uBAAOR,SAAP,GAAmB,aAAK;;AAEpB,wBAAIW,QAAQP,EAAEC,MAAF,CAASO,MAArB;;AAEA,wBAAID,KAAJ,EAAW;;AAEP,4BAAIE,OAAOF,MAAMG,KAAjB;AACAJ,oCAAYK,IAAZ,CAAiB,IAAIC,UAAJ,CAAeH,KAAKI,KAApB,EAA2BJ,KAAKK,WAAhC,EAA6CL,KAAKM,MAAlD,CAAjB;AACAR,8BAAMS,QAAN;AACH,qBALD,MAMI;;AAEA1B,gCAAQgB,WAAR;AACH;AACJ,iBAdD;;AAgBAF,uBAAOP,OAAP,GAAiB,aAAK;;AAElBC,4BAAQC,GAAR,CAAYC,EAAEC,MAAF,CAASC,KAAT,CAAee,IAA3B;AACA1B,2BAAO,yCAAP;AACH,iBAJD;AAKH,aA9BM,CAAP;AA+BH","file":"NegociacaoDao.js","sourcesContent":["class NegociacaoDao {\r\n\r\n    constructor(connection){\r\n\r\n        this._connection = connection;\r\n        this._store = \"negociacoes\";\r\n    }\r\n\r\n    adiciona(negociacao){\r\n\r\n        return new Promise((resolve, reject) => {\r\n\r\n            let request = this._connection\r\n                              .transaction([this._store],'readwrite')\r\n                              .objectStore(this._store)\r\n                              .add(negociacao);\r\n\r\n            request.onsuccess = e => {\r\n\r\n                resolve();\r\n            };\r\n\r\n            request.onerror = e => {\r\n\r\n                console.log(e.target.error);\r\n                reject('Não foi possível adicionar a negociação.');                \r\n            };\r\n        })\r\n    }\r\n\r\n    apagaTodos(){\r\n\r\n        return new Promise((resolve,reject) => {\r\n\r\n            let request = this._connection\r\n                .transaction([this._store],'readwrite')\r\n                .objectStore(this._store)\r\n                .clear();\r\n\r\n            request.onsuccess = e => {\r\n\r\n                resolve('Negociações apagadas com sucesso.')\r\n            }\r\n\r\n            request.onerror = e => {\r\n                \r\n                reject('Não foi possível remover as negociações.')\r\n            }\r\n        })\r\n    }\r\n\r\n    listaTodos(){\r\n\r\n        return new Promise((resolve,reject) =>{\r\n\r\n            let cursor = this._connection\r\n                            .transaction([this._store], 'readwrite')\r\n                            .objectStore(this._store)\r\n                            .openCursor();\r\n\r\n            let negociacoes = [];\r\n\r\n            cursor.onsuccess = e => {\r\n\r\n                let atual = e.target.result;\r\n\r\n                if (atual) {\r\n\r\n                    let dado = atual.value;\r\n                    negociacoes.push(new Negociacao(dado._data, dado._quantidade, dado._valor));\r\n                    atual.continue();                    \r\n                }\r\n                else{\r\n\r\n                    resolve(negociacoes);                    \r\n                }\r\n            }\r\n\r\n            cursor.onerror = e => {\r\n                \r\n                console.log(e.target.error.name);                \r\n                reject('Não foi possível listar as negociações.');\r\n            }\r\n        })\r\n    }\r\n}"]}