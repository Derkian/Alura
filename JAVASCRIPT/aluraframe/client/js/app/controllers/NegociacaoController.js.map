{"version":3,"sources":["../../app-es6/controllers/NegociacaoController.js"],"names":["NegociacaoController","$","document","querySelector","bind","_inputData","_inputQuantidade","_inputValor","_listaNegociacoes","Bind","ListaNegociacoes","NegociacoesView","_mensagem","Mensagem","MensagemView","_ordemAtual","_init","ConnectionFactory","getConnection","then","NegociacaoDao","connection","dao","listaTodos","negociacoes","forEach","adiciona","negociacao","setInterval","importaNegociacoes","event","preventDefault","_criaNegociacao","texto","_limpaFormulario","catch","erro","service","NegociacaoService","obterNegociacoes","filter","some","JSON","stringify","negociacaoExistente","apagaTodos","esvazia","mensagem","Negociacao","DateHelper","textoParaData","value","parseInt","parseFloat","focus","coluna","inverteOrdem","ordena","p","s"],"mappings":"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","file":"NegociacaoController.js","sourcesContent":["class NegociacaoController {\n    \n    constructor() {\n        \n        let $ = document.querySelector.bind(document);\n        \n        this._inputData = $('#data');\n        this._inputQuantidade = $('#quantidade');\n        this._inputValor = $('#valor');\n         \n        this._listaNegociacoes = new Bind(\n            new ListaNegociacoes(), \n            new NegociacoesView($('#negociacoesView')), \n            'adiciona', 'esvazia' , 'ordena', 'inverteOrdem');\n       \n        this._mensagem = new Bind(\n            new Mensagem(), new MensagemView($('#mensagemView')),\n            'texto');    \n            \n        this._ordemAtual = ''               \n\n        this._init();\n    }\n    \n    _init(){\n        \n        ConnectionFactory\n            .getConnection()\n            .then(connection => new NegociacaoDao(connection))\n            .then(dao => dao.listaTodos())\n            .then(negociacoes => {\n                negociacoes.forEach(negociacao => {\n                    this._listaNegociacoes.adiciona(negociacao);\n                });\n            });\n        \n        setInterval(() => {\n            this.importaNegociacoes()\n        },5000);        \n    }\n\n    adiciona(event) {\n       \n        event.preventDefault();\n\n        ConnectionFactory\n            .getConnection()\n            .then(connection => {\n\n                let negociacao = this._criaNegociacao();\n                new NegociacaoDao(connection)\n                    .adiciona(negociacao)\n                    .then(() => {\n                        \n                        this._listaNegociacoes.adiciona(negociacao);\n                        this._mensagem.texto = 'Negociação adicionada com sucesso'; \n                        this._limpaFormulario();   \n                    })\n                    .catch(erro => {\n\n                        this._mensagem.texto = erro;\n                    })\n            })\n            .catch(erro => {\n\n                this._mensagem.texto = erro;\n            });\n    }\n    \n    importaNegociacoes() {        \n\n        let service = new NegociacaoService();\n        service\n            .obterNegociacoes()\n            .then(negociacoes =>\n                negociacoes.filter(negociacao => \n                    !this._listaNegociacoes.negociacoes.some(negociacaoExistente =>\n                        JSON.stringify(negociacaoExistente) == JSON.stringify(negociacao)))\n            )\n            .then(negociacoes => negociacoes.forEach(negociacao => {\n                this._listaNegociacoes.adiciona(negociacao);\n                this._mensagem.texto = 'Negociações do período importadas'   \n            }))\n            .catch(erro => this._mensagem.texto = erro);                              \n    }\n    \n    apaga() {\n        \n        ConnectionFactory\n            .getConnection()\n            .then(connection => new NegociacaoDao(connection))\n            .then(dao => dao.apagaTodos())\n            .then(mensagem => {\n                this._listaNegociacoes.esvazia()\n                this._mensagem.texto = mensagem;\n            })\n            .catch(mensagem => {\n                this._mensagem.texto = mensagem;\n            });\n    }\n    \n    _criaNegociacao() {\n        \n        return new Negociacao(\n            DateHelper.textoParaData(this._inputData.value),\n            parseInt(this._inputQuantidade.value),\n            parseFloat(this._inputValor.value));    \n    }\n    \n    _limpaFormulario() {\n     \n        this._inputData.value = '';\n        this._inputQuantidade.value = 1;\n        this._inputValor.value = 0.0;\n        this._inputData.focus();   \n    }\n    \n    ordena(coluna) {\n        \n        if(this._ordemAtual == coluna) {\n            this._listaNegociacoes.inverteOrdem(); \n        } else {\n            this._listaNegociacoes.ordena((p, s) => p[coluna] - s[coluna]);    \n        }\n        this._ordemAtual = coluna;    \n    }\n}"]}